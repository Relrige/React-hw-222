{"ast":null,"code":"const useRandomValueFromArray = () => {\n  let alreadyDone = [];\n  const randomValueFromArray = myArray => {\n    if (alreadyDone.length === 0) {\n      for (let i = 0; i < myArray.length; i++) alreadyDone.push(i);\n    }\n    let randomValueIndex = Math.floor(Math.random() * alreadyDone.length);\n    let indexOfItemInMyArray = alreadyDone[randomValueIndex];\n    alreadyDone.splice(randomValueIndex, 1);\n    return myArray[indexOfItemInMyArray];\n  };\n  return {\n    randomValueFromArray\n  };\n};\nexport default useRandomValueFromArray;","map":{"version":3,"names":["useRandomValueFromArray","alreadyDone","randomValueFromArray","myArray","length","i","push","randomValueIndex","Math","floor","random","indexOfItemInMyArray","splice"],"sources":["C:/Users/Admin/Desktop/Intro-to-React-hw-2.2-master/src/hooks/useRandomValueFromArray.js"],"sourcesContent":["const useRandomValueFromArray = () => {\n  let alreadyDone = [];\n\n  const randomValueFromArray = (myArray) => {\n    if (alreadyDone.length === 0) {\n      for (let i = 0; i < myArray.length; i++) alreadyDone.push(i);\n    }\n    let randomValueIndex = Math.floor(Math.random() * alreadyDone.length);\n    let indexOfItemInMyArray = alreadyDone[randomValueIndex];\n\n    alreadyDone.splice(randomValueIndex, 1);\n\n    return myArray[indexOfItemInMyArray];\n  };\n  return {                                                                                             \n    randomValueFromArray,\n  };\n};\n\nexport default useRandomValueFromArray;\n"],"mappings":"AAAA,MAAMA,uBAAuB,GAAGA,CAAA,KAAM;EACpC,IAAIC,WAAW,GAAG,EAAE;EAEpB,MAAMC,oBAAoB,GAAIC,OAAO,IAAK;IACxC,IAAIF,WAAW,CAACG,MAAM,KAAK,CAAC,EAAE;MAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAEJ,WAAW,CAACK,IAAI,CAACD,CAAC,CAAC;IAC9D;IACA,IAAIE,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,WAAW,CAACG,MAAM,CAAC;IACrE,IAAIO,oBAAoB,GAAGV,WAAW,CAACM,gBAAgB,CAAC;IAExDN,WAAW,CAACW,MAAM,CAACL,gBAAgB,EAAE,CAAC,CAAC;IAEvC,OAAOJ,OAAO,CAACQ,oBAAoB,CAAC;EACtC,CAAC;EACD,OAAO;IACLT;EACF,CAAC;AACH,CAAC;AAED,eAAeF,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}